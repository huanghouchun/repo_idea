<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lagou.dao.UserMapper">

    <!--用户分页&多条件组合查询-->
    <select id="findAllUserByPage" parameterType="userVo" resultType="user">
        select * from user
        <where>
            <!-- true 直接可以进 is_del = 1 代表逻辑上已删除 -->
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null and username != ''">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>
    </select>

    <!--修改用户状态-->
    <update id="updateUserStatus" parameterType="user">
        update user set status = #{status}, update_time = #{update_time}
        where id = #{id}
    </update>

    <!--用户登录-->
    <select id="login" resultType="user" parameterType="user">
        <!-- 此处担当用户名的是 phone -->
        select * from user where phone = #{phone}
    </select>

    <!--根据 用户 id 清空中间表关联关系-->
    <delete id="deleteUserContextRole" parameterType="int">
        delete from user_role_relation where user_id = #{userId}
    </delete>

    <!--分配角色-->
    <insert id="userContextRole" parameterType="user_role_relation">
        insert into user_role_relation values(
            null, #{userId}, #{roleId}, #{createdTime}, #{updatedTime},
            #{createdBy}, #{updatedby}
        )
    </insert>

    <!--1.根据用户 id 查询关联的角色信息-->
    <select id="findUserRelationRoleById" parameterType="int" resultType="role">
        SELECT
          r.*
        FROM
          roles r
          INNER JOIN user_role_relation ur
            ON ur.`role_id` = r.`id`
        WHERE ur.`user_id` = #{userId}
    </select>

    <!--2.根据角色 id 查询角色所拥有的 顶级菜单(parent_id = -1) 多对多 记得菜单信息要去重 我们这里也只查询菜单信息-->
    <select id="findParentMenuByRoleId" resultType="menu" parameterType="list">
        SELECT DISTINCT
          m.*
        FROM
          roles r
          INNER JOIN role_menu_relation rm
            ON r.`id` = rm.`role_id`
          INNER JOIN menu m
            ON rm.`menu_id` = m.`id`
        WHERE m.`parent_id` = - 1
          AND r.`id` IN
        <!-- collection 表示当前传过来的是一个 list 集合 item 表示传过来的集合中遍历出来的的每一个值 -->
        <foreach collection="list" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
    </select>

    <!--3.根据 PID 查询子级菜单信息-->
    <select id="findSubMenuByPid" parameterType="int" resultType="menu">
        SELECT
          *
        FROM
          menu
        WHERE parent_id = #{pid}
    </select>

    <!-- 4.获取用户拥有的资源权限信息 多对多-->
    <select id="findResourceByRoleId" resultType="resource" parameterType="list">
        SELECT DISTINCT
            r.*
        FROM
            resource r
            INNER JOIN role_resource_relation rr
                ON rr.resource_id = r.id
            inner join roles ro
                on rr.role_id = ro.id
        WHERE ro.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>